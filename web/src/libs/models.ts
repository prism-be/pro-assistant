//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export interface AccountingDocument {
    amount: number;
    date: string;
    id: string;
    reference: string;
    title: string;
}

export interface AccountingReportingPeriod {
    details: IncomeDetail[];
    endDate: string;
    id: string;
    income: number;
    expense: number;
    startDate: string;
    type: number;
}

export interface Appointment {
    birthDate?: string | null;
    contactId?: string | null;
    duration: number;
    firstName?: string | null;
    id: string;
    lastName?: string | null;
    payment: number;
    paymentDate?: string | null;
    phoneNumber?: string | null;
    price: number;
    startDate: string;
    state: number;
    title?: string | null;
    type?: string | null;
    typeId?: string | null;
    backgroundColor?: string | null;
    documents: BinaryDocument[];
    foreColor?: string | null;
}

export interface AppointmentClosing {
    id: string;
    payment: number;
    paymentDate?: string | null;
    state: number;
}

export interface AppointmentInformation {
    birthDate?: string | null;
    contactId?: string | null;
    duration: number;
    firstName?: string | null;
    id: string;
    lastName?: string | null;
    payment: number;
    paymentDate?: string | null;
    phoneNumber?: string | null;
    price: number;
    startDate: string;
    state: number;
    title?: string | null;
    type?: string | null;
    typeId?: string | null;
}

export interface BinaryDocument {
    date: string;
    fileName: string;
    id: string;
    title: string;
}

export interface Contact {
    birthDate?: string | null;
    city?: string | null;
    country?: string | null;
    email?: string | null;
    firstName?: string | null;
    lastName?: string | null;
    mobileNumber?: string | null;
    number?: string | null;
    phoneNumber?: string | null;
    street?: string | null;
    title?: string | null;
    zipCode?: string | null;
    id: string;
}

export interface DocumentConfiguration {
    body?: string | null;
    name?: string | null;
    title?: string | null;
    id: string;
}

export interface DocumentRequest {
    documentId: string;
    appointmentId: string;
}

export interface DownloadReference {
    id: string;
}

export interface Filter {
    field: string;
    value: any;
    operator: string;
}

export interface Forecast {
    title?: string | null;
    id: string;
    year: number;
    previsions: ForecastPrevision[];
    weeklyBudgets: ForecastWeeklyBudget[];
}

export interface ForecastInformation {
    id: string;
    title: string;
    year: number;
}

export interface ForecastPrevision {
    amount: number;
    endDate: string;
    id: string;
    name: string;
    recurringCount: number;
    recurringType: RecurringType;
    startDate: string;
    type: ForecastPrevisionType;
}

export enum ForecastPrevisionType {
    _0 = 0,
    _1 = 1,
}

export interface ForecastWeeklyBudget {
    amount: number;
    monday: string;
    weekOfYear: number;
}

export interface IncomeDetail {
    id: string;
    count: number;
    subTotal: number;
    type: string;
    unitPrice: number;
}

export enum RecurringType {
    _0 = 0,
    _1 = 1,
    _2 = 2,
    _3 = 3,
    _4 = 4,
}

export interface Setting {
    id: string;
    value: string;
}

export interface Tariff {
    price: number;
    defaultDuration: number;
    id: string;
    name: string;
    backgroundColor?: string | null;
    foreColor?: string | null;
}

export interface UpsertResult {
    id?: string | null;
}

export interface UserInformation {
    isAuthenticated: boolean;
    name: string;
    organization: string;
}